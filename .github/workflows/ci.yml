name: Build and test
on:
  push:
    branches-ignore:
      - '*.tmp'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  fmt:
    name: fmt
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.81
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  test:
    name: test
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.81
      - run: cargo test --lib --target x86_64-unknown-linux-gnu
      - run: cargo test --doc --target x86_64-unknown-linux-gnu

  test-msrv:
    name: build with MSRV
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
            toolchain: 1.81
      - run: cargo build --lib --target x86_64-unknown-linux-gnu 
      - run: cargo build --lib --target x86_64-unknown-linux-gnu --features async  --no-default-features
      - run: cargo doc --target x86_64-unknown-linux-gnu
      - run: cargo doc --target x86_64-unknown-linux-gnu --features async --no-default-features

  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          -  arm-unknown-linux-gnueabi
          # Raspberry Pi 2, 3, etc
          - armv7-unknown-linux-gnueabihf
          # Linux
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          # Bare metal
          - thumbv6m-none-eabi
          - riscv32imc-unknown-none-elf
          - thumbv7em-none-eabi

    name: ${{matrix.target}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.81
        with:
          components: rustfmt
      - run: rustup target add ${{matrix.target}}
      - run: cargo build --target ${{matrix.target}} --features  sync --release --no-default-features
      - run: cargo build --target ${{matrix.target}} --features  async --release --no-default-features

